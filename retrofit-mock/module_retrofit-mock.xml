<?xml version="1.0" encoding="UTF-8"?>
<project name="module_retrofit-mock" default="compile.module.retrofit-mock">
  <dirname property="module.retrofit-mock.basedir" file="${ant.file.module_retrofit-mock}"/>
  
  <property name="module.jdk.home.retrofit-mock" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.retrofit-mock" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.retrofit-mock" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.retrofit-mock" value="-encoding UTF-8 -source 1.7 -target 1.7 ${compiler.args}"/>
  
  <property name="retrofit-mock.output.dir" value="${module.retrofit-mock.basedir}/target/classes"/>
  <property name="retrofit-mock.testoutput.dir" value="${module.retrofit-mock.basedir}/target/test-classes"/>
  
  <path id="retrofit-mock.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="retrofit-mock.module.production.classpath">
    <path refid="${module.jdk.classpath.retrofit-mock}"/>
    <pathelement location="${retrofit.output.dir}"/>
    <path refid="library.maven:_com.squareup.okhttp3:okhttp:3.6.0.classpath"/>
    <path refid="library.maven:_com.squareup.okio:okio:1.11.0.classpath"/>
  </path>
  
  <path id="retrofit-mock.runtime.production.module.classpath">
    <pathelement location="${retrofit-mock.output.dir}"/>
    <path refid="retrofit.runtime.production.module.classpath"/>
    <path refid="library.maven:_com.squareup.okhttp3:okhttp:3.6.0.classpath"/>
    <path refid="library.maven:_com.squareup.okio:okio:1.11.0.classpath"/>
  </path>
  
  <path id="retrofit-mock.module.classpath">
    <path refid="${module.jdk.classpath.retrofit-mock}"/>
    <pathelement location="${retrofit-mock.output.dir}"/>
    <pathelement location="${retrofit.testoutput.dir}"/>
    <pathelement location="${retrofit.output.dir}"/>
    <path refid="library.maven:_com.squareup.okhttp3:okhttp:3.6.0.classpath"/>
    <path refid="library.maven:_com.squareup.okio:okio:1.11.0.classpath"/>
    <path refid="library.maven:_junit:junit:4.12.classpath"/>
    <path refid="library.maven:_org.hamcrest:hamcrest-core:1.3.classpath"/>
    <path refid="library.maven:_org.assertj:assertj-core:1.7.0.classpath"/>
    <path refid="library.maven:_org.mockito:mockito-core:1.9.5.classpath"/>
    <path refid="library.maven:_org.objenesis:objenesis:1.0.classpath"/>
  </path>
  
  <path id="retrofit-mock.runtime.module.classpath">
    <pathelement location="${retrofit-mock.testoutput.dir}"/>
    <pathelement location="${retrofit-mock.output.dir}"/>
    <path refid="retrofit.runtime.module.classpath"/>
    <path refid="library.maven:_com.squareup.okhttp3:okhttp:3.6.0.classpath"/>
    <path refid="library.maven:_com.squareup.okio:okio:1.11.0.classpath"/>
    <path refid="library.maven:_junit:junit:4.12.classpath"/>
    <path refid="library.maven:_org.hamcrest:hamcrest-core:1.3.classpath"/>
    <path refid="library.maven:_org.assertj:assertj-core:1.7.0.classpath"/>
    <path refid="library.maven:_org.mockito:mockito-core:1.9.5.classpath"/>
    <path refid="library.maven:_org.objenesis:objenesis:1.0.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.retrofit-mock">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.retrofit-mock">
    <patternset refid="excluded.from.module.retrofit-mock"/>
  </patternset>
  
  <path id="retrofit-mock.module.sourcepath">
    <dirset dir="${module.retrofit-mock.basedir}">
      <include name="src/main/java"/>
    </dirset>
  </path>
  
  <path id="retrofit-mock.module.test.sourcepath">
    <dirset dir="${module.retrofit-mock.basedir}">
      <include name="src/test/java"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.retrofit-mock" depends="compile.module.retrofit-mock.production,compile.module.retrofit-mock.tests" description="Compile module retrofit-mock"/>
  
  <target name="compile.module.retrofit-mock.production" depends="register.custom.compilers,compile.module.retrofit" description="Compile module retrofit-mock; production classes">
    <mkdir dir="${retrofit-mock.output.dir}"/>
    <javac2 destdir="${retrofit-mock.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.retrofit-mock}/javac">
      <compilerarg line="${compiler.args.retrofit-mock}"/>
      <bootclasspath refid="retrofit-mock.module.bootclasspath"/>
      <classpath refid="retrofit-mock.module.production.classpath"/>
      <src refid="retrofit-mock.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.retrofit-mock"/>
    </javac2>
    
    <copy todir="${retrofit-mock.output.dir}">
      <fileset dir="${module.retrofit-mock.basedir}/src/main/java">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.retrofit-mock.tests" depends="register.custom.compilers,compile.module.retrofit-mock.production" description="compile module retrofit-mock; test classes" unless="skip.tests">
    <mkdir dir="${retrofit-mock.testoutput.dir}"/>
    <javac2 destdir="${retrofit-mock.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.retrofit-mock}/javac">
      <compilerarg line="${compiler.args.retrofit-mock}"/>
      <bootclasspath refid="retrofit-mock.module.bootclasspath"/>
      <classpath refid="retrofit-mock.module.classpath"/>
      <src refid="retrofit-mock.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.retrofit-mock"/>
    </javac2>
    
    <copy todir="${retrofit-mock.testoutput.dir}">
      <fileset dir="${module.retrofit-mock.basedir}/src/test/java">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.retrofit-mock" description="cleanup module">
    <delete dir="${retrofit-mock.output.dir}"/>
    <delete dir="${retrofit-mock.testoutput.dir}"/>
  </target>
</project>